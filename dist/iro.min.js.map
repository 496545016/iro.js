{"version":3,"sources":["webpack:///iro.min.js","webpack:///webpack/bootstrap 03c3fb10168efadf09ad","webpack:///./colorModels/rgb.js","webpack:///./util/dom.js","webpack:///./modules/color.js","webpack:///./modules/stylesheet.js","webpack:///./colorModels/hsl.js","webpack:///./colorModels/hslString.js","webpack:///./ui/marker.js","webpack:///./modules/colorPicker.js","webpack:///./colorModels/hexString.js","webpack:///./colorModels/rgbString.js","webpack:///./iro.js","webpack:///./ui/slider.js","webpack:///./ui/svg.js","webpack:///./ui/wheel.js"],"names":["iro","modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","round","Math","fromHsv","hsv","r","g","b","f","q","t","h","v","floor","toHsv","rgb","hue","max","min","delta","iterateList","list","callback","forEach","doc","document","create","tagName","nameSpaceType","createElementNS","createElement","append","parent","child","appendChild","appendNew","attrs","this","setAttr","attr","el","attrName","getAttribute","setAttribute","listen","eventList","eventName","addEventListener","unlisten","removeEventListener","whenReady","_this","readyState","stateChange","e","_interopRequireDefault","obj","default","_hsl","_hsl2","_rgb","_rgb2","_hslString","_hslString2","_rgbString","_rgbString2","_hexString","_hexString2","colorModels","color","str","_onChange","_value","undefined","register","set","model","fromString","descriptor","watch","callImmediately","forceUpdate","unwatch","newValue","changes","oldValue","channel","test","rgbString","hslString","hexString","_dom","_dom2","stylesheet","overrides","style","head","createTextNode","sheet","rules","cssRules","map","on","enable","disabled","off","disable","setRule","selector","replace","$1","toLowerCase","setProperty","index","length","declaration","insertRule","addRule","getCss","ret","ruleSet","getPropertyValue","getCssText","push","cssText","join","hsl","a","parsed","match","parseInt","marker","svg","opts","group","insert","ring","circle","sw","_el","move","x","y","_wheel","_wheel2","_slider","_slider2","_svg","_svg2","_color","_color2","_stylesheet","_stylesheet2","activeColorWheel","_mouseMove","preventDefault","emit","_mouseTarget","colorWheel","_events","css","styles","querySelector","width","height","svgRoot","devicePixelRatio","padding","borderWidth","markerRadius","sliderMargin","sliderHeight","bodyWidth","wheelRadius","leftMargin","borderStyles","w","borderColor","ui","cX","cY","rMax","border","sliderType","_update","bind","_mouseDown","eventType","events","splice","indexOf","data","_getLocalPoint","point","touches","changedTouches","rect","getBoundingClientRect","clientX","left","clientY","top","_handleInput","input","uiElement","checkHit","update","properties","prop","useShorthand","divider","bitLength","strLength","int","toString","Array","hex","isShorthand","bitMask","multiplier","_colorPicker","_colorPicker2","Color","ColorPicker","Stylesheet","ColorWheel","_marker","_marker2","slider","range","type","_opts","radius","gradient","0","100","rx","ry","id","_gradient","percent","dist","PI","cos","sin","gradientid","svgGradient","root","stops","stopElements","_defs","offset","stop-color","_root","viewBox","arc","cx","cy","startAngle","endAngle","x1","y1","x2","y2","pow","sqrt","abs","wheel","_lightness","hueAngle","rangeMax","angle","atan2","dx","dy"],"mappings":"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","file":"iro.min.js","sourcesContent":["/*!\n * iro.js\n * ----------------\n * Author: James Daniel (github.com/jaames | rakujira.jp)\n * Last updated: Sun Aug 20 2017\n */\nvar iro =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/test\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 10);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar round = Math.round;\n\nmodule.exports = {\n  name: \"rgb\",\n\n  fromHsv: function fromHsv(hsv) {\n    var r, g, b, i, f, p, q, t;\n    var h = hsv.h / 360,\n        s = hsv.s / 100,\n        v = hsv.v / 100;\n    i = Math.floor(h * 6);\n    f = h * 6 - i;\n    p = v * (1 - s);\n    q = v * (1 - f * s);\n    t = v * (1 - (1 - f) * s);\n    switch (i % 6) {\n      case 0:\n        r = v, g = t, b = p;break;\n      case 1:\n        r = q, g = v, b = p;break;\n      case 2:\n        r = p, g = v, b = t;break;\n      case 3:\n        r = p, g = q, b = v;break;\n      case 4:\n        r = t, g = p, b = v;break;\n      case 5:\n        r = v, g = p, b = q;break;\n    }\n    return { r: round(r * 255), g: round(g * 255), b: round(b * 255) };\n  },\n\n  toHsv: function toHsv(rgb) {\n    // Modified from https://github.com/bgrins/TinyColor/blob/master/tinycolor.js#L446\n    var r = rgb.r / 255,\n        g = rgb.g / 255,\n        b = rgb.b / 255;\n    var max = Math.max(r, g, b),\n        min = Math.min(r, g, b),\n        delta = max - min;\n    var hue;\n    switch (max) {\n      case min:\n        hue = 0;\n        break;\n      case r:\n        hue = (g - b) / delta + (g < b ? 6 : 0);\n        break;\n      case g:\n        hue = (b - r) / delta + 2;\n        break;\n      case b:\n        hue = (r - g) / delta + 4;\n        break;\n    }\n    hue /= 6;\n    return {\n      h: round(hue * 360),\n      s: round(max === 0 ? 0 : delta / max * 100),\n      v: round(max * 100)\n    };\n  }\n};\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n// Quick reference to the document object and some strings since we usethem more than once\nvar doc = document,\n    READYSTATE_COMPLETE = \"complete\",\n    READYSTATE_CHANGE = \"readystatechange\";\n\n/**\n * @desc iterate a list (or create a one-item list from a string), calling callback with each item\n * @param {ArrayOrString} list an array or string, callback will be called for each array item, or once if a string is given\n * @param {Function} callback a function to call for each item, the item will be passed as the first parameter\n * @access private\n*/\nfunction iterateList(list, callback) {\n  list = \"string\" == typeof list ? [list] : list;\n  list.forEach(callback);\n};\n\nmodule.exports = {\n  /**\n   * @desc create a new HTML element\n   * @param {String} tagName the tag type of the element to create\n   * @param {String} nameSpaceType \"SVG\" = svg namespace, leave false for default namespace\n   * @return {Element} the newly created HTML element\n  */\n  create: function create(tagName, nameSpaceType) {\n    return nameSpaceType == \"SVG\" ? doc.createElementNS(\"http://www.w3.org/2000/svg\", tagName) : doc.createElement(tagName);\n  },\n\n  /**\n   * @desc append a child element to an element\n   * @param {Element} parent the parent element to append to\n   * @param {Element} child the child element to append\n   * @return {Element} the child element, now appended to the parent\n  */\n  append: function append(parent, child) {\n    return parent.appendChild(child);\n  },\n\n  appendNew: function appendNew(parent, tagName, attrs, nameSpaceType) {\n    var child = this.create(tagName, nameSpaceType);\n    this.setAttr(child, attrs);\n    return parent.appendChild(child);\n  },\n\n  /**\n   * @desc get an element's attribute by name\n   * @param {Element} el target element\n   * @param {String} attrName the name of the attribute to get\n   * @return {String} the value of the attribute\n  */\n  attr: function attr(el, attrName) {\n    return el.getAttribute(attrName);\n  },\n\n  setAttr: function setAttr(el, attrs) {\n    for (var attrName in attrs || {}) {\n      el.setAttribute(attrName, attrs[attrName]);\n    }\n  },\n\n  /**\n   * @desc listen to one or more events on an element\n   * @param {Element} el target element\n   * @param {ArrayOrString} eventList the events to listen to\n   * @param {Function} callback the event callback function\n  */\n  listen: function listen(el, eventList, callback) {\n    iterateList(eventList, function (eventName) {\n      el.addEventListener(eventName, callback);\n    });\n  },\n\n  /**\n   * @desc remove an event listener on an element\n   * @param {Element} el target element\n   * @param {ArrayOrString} eventList the events to remove\n   * @param {Function} callback the event callback function\n  */\n  unlisten: function unlisten(el, eventList, callback) {\n    iterateList(eventList, function (eventName) {\n      el.removeEventListener(eventName, callback);\n    });\n  },\n\n  /**\n   * @desc call callback when the page document is ready\n   * @param {Function} callback callback function to be called\n  */\n  whenReady: function whenReady(callback) {\n    var _this = this;\n    if (doc.readyState == READYSTATE_COMPLETE) {\n      callback();\n    } else {\n      _this.listen(doc, READYSTATE_CHANGE, function stateChange(e) {\n        if (doc.readyState == READYSTATE_COMPLETE) {\n          callback();\n          _this.unlisten(doc, READYSTATE_CHANGE, stateChange);\n        }\n      });\n    }\n  }\n};\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _hsl = __webpack_require__(4);\n\nvar _hsl2 = _interopRequireDefault(_hsl);\n\nvar _rgb = __webpack_require__(0);\n\nvar _rgb2 = _interopRequireDefault(_rgb);\n\nvar _hslString = __webpack_require__(5);\n\nvar _hslString2 = _interopRequireDefault(_hslString);\n\nvar _rgbString = __webpack_require__(9);\n\nvar _rgbString2 = _interopRequireDefault(_rgbString);\n\nvar _hexString = __webpack_require__(8);\n\nvar _hexString2 = _interopRequireDefault(_hexString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar colorModels = [_hsl2.default, _rgb2.default, _hslString2.default, _rgbString2.default, _hexString2.default];\n\n/**\n  @constructor color object\n  @param {String} str (optional) CSS color string to use as the start color for this element\n*/\nvar color = function color(str) {\n  var _this = this;\n\n  if (!(this instanceof color)) return new color(str);\n  // The watch callback function for this color will be stored here\n  this._onChange = false;\n  // The default color value\n  this._value = { h: undefined, s: undefined, v: undefined };\n  this.register(\"hsv\", {\n    get: this.get,\n    set: this.set\n  });\n  // Loop through each external color model and register it\n  colorModels.forEach(function (model) {\n    _this.register(model.name, {\n      set: function set(value) {\n        this.hsv = model.toHsv(value);\n      },\n      get: function get() {\n        return model.fromHsv(this.hsv);\n      }\n    });\n  });\n  if (str) this.fromString(str);\n};\n\ncolor.prototype = {\n\n  /**\n    * @desc Register a new color model on this instance\n    * @param {String} name The name of the color model\n    * @param {Object} descriptor The property descriptor (see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty#Description)\n  */\n  register: function register(name, descriptor) {\n    Object.defineProperty(this, name, descriptor);\n  },\n\n  /**\n    * @desc Set a callback function that gets called whenever the selected color changes\n    * @param {Function} callback The watch callback\n    * @param {Boolean} callImmediately set to true if you want to call the callback as soon as it is added\n  */\n  watch: function watch(callback, callImmediately) {\n    this._onChange = callback;\n    if (callImmediately) this.forceUpdate();\n  },\n\n  /**\n    * @desc Remove the watch callback\n  */\n  unwatch: function unwatch() {\n    this.watch(false);\n  },\n\n  /**\n    * @desc Force an update\n  */\n  forceUpdate: function forceUpdate() {\n    var value = this._value;\n    this._onChange(value, value, { h: true, s: true, v: true });\n  },\n\n  /**\n    * @desc Set the color from a HSV value\n    * @param {Object} newValue - HSV object\n  */\n  set: function set(newValue) {\n    // Loop through the channels and check if any of them have changed\n    var changes = {};\n    var oldValue = this._value;\n    for (var channel in oldValue) {\n      if (!newValue.hasOwnProperty(channel)) newValue[channel] = oldValue[channel];\n      changes[channel] = !(newValue[channel] == oldValue[channel]);\n    }\n    // Update the old value\n    this._value = newValue;\n    // If the value has changed, call hook callback\n    var callback = this._onChange;\n    if ((changes.h || changes.s || changes.v) && \"function\" == typeof callback) callback(newValue, oldValue, changes);\n  },\n\n  /**\n    * @desc Get the HSV value\n    * @return HSV object\n  */\n  get: function get() {\n    return this._value;\n  },\n\n  /**\n    * @desc Set the color from a CSS string\n    * @param {String} str - HEX, rgb, or hsl color string\n  */\n  fromString: function fromString(str) {\n    if (/^rgb/.test(str)) {\n      this.rgbString = str;\n    } else if (/^hsl/.test(str)) {\n      this.hslString = str;\n    } else if (/^#[0-9A-Fa-f]/.test(str)) {\n      this.hexString = str;\n    }\n  }\n};\n\nmodule.exports = color;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _dom = __webpack_require__(1);\n\nvar _dom2 = _interopRequireDefault(_dom);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar doc = document;\n\n/**\n  @constructor stylesheet writer\n  @param {Object} overrides - an object representing the CSS rules that this stylesheet updates\n*/\nvar stylesheet = function stylesheet(overrides) {\n  // Create a new style element\n  var style = _dom2.default.appendNew(doc.head, \"style\", {});\n  // Webkit apparently requires a text node to be inserted into the style element\n  // (according to https://davidwalsh.name/add-rules-stylesheets)\n  _dom2.default.append(style, doc.createTextNode(\"\"));\n  this.style = style;\n  // Create a reference to the style element's CSSStyleSheet object\n  // CSSStyleSheet API: https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleSheet\n  var sheet = style.sheet;\n  this.sheet = sheet;\n  // Get a reference to the sheet's CSSRuleList object\n  // CSSRuleList API: https://developer.mozilla.org/en-US/docs/Web/API/CSSRuleList\n  this.rules = sheet.rules || sheet.cssRules;\n  // We'll store references to all the CSSStyleDeclaration objects that we change here, keyed by the CSS selector they belong to\n  // CSSStyleDeclaration API: https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration\n  this.map = {};\n};\n\nstylesheet.prototype = {\n\n  /**\n    * @desc Turns the stylesheet \"on\", allowing the styles to be rendered\n  */\n  on: function on() {\n    this.enable();\n  },\n  enable: function enable() {\n    this.sheet.disabled = false;\n  },\n\n  /**\n    * @desc Turns the stylesheet \"off\", preventing the styles from being rendered\n  */\n  off: function off() {\n    this.disable();\n  },\n  disable: function disable() {\n    this.sheet.disabled = true;\n  },\n\n  /**\n    * @desc Set a specific rule for a given selector\n    * @param {String} selector - the CSS selector for this rule (e.g. \"body\", \".class\", \"#id\")\n    * @param {String} property - the CSS property to set (e.g. \"background-color\", \"font-family\", \"z-index\")\n    * @param {String} value    - the new value for the rule (e.g. \"rgb(255, 255, 255)\", \"Helvetica\", \"99\")\n  */\n  setRule: function setRule(selector, property, value) {\n    var sheet = this.sheet;\n    var rules = sheet.rules || sheet.cssRules;\n    var map = this.map;\n    // Convert property from camelCase to snake-case\n    property = property.replace(/([A-Z])/g, function ($1) {\n      return \"-\" + $1.toLowerCase();\n    });\n    if (!map.hasOwnProperty(selector)) {\n      // If the selector hasn't been used yet we want to insert the rule at the end of the CSSRuleList, so we use its length as the index value\n      var index = rules.length;\n      // Prepare the rule declaration text, since both insertRule and addRule take this format\n      var declaration = property + \": \" + value;\n      // Insert the new rule into the stylesheet\n      try {\n        // Some browsers only support insertRule, others only support addRule, so we have to use both\n        sheet.insertRule(selector + \" {\" + declaration + \";}\", index);\n      } catch (e) {\n        sheet.addRule(selector, declaration, index);\n      } finally {\n        // Because safari is perhaps the worst browser in all of history, we have to remind it to keep the sheet rules up-to-date\n        rules = sheet.rules || sheet.cssRules;\n        // Add our newly inserted rule's CSSStyleDeclaration object to the internal map\n        map[selector] = rules[index].style;\n      }\n    } else {\n      map[selector].setProperty(property, value);\n    }\n  },\n\n  /**\n    * @desc Get an object representing the current css styles\n    * @return {Object} css object\n  */\n  getCss: function getCss() {\n    var map = this.map;\n    var ret = {};\n    for (var selector in map) {\n      var ruleSet = map[selector];\n      ret[selector] = {};\n      for (var i = 0; i < ruleSet.length; i++) {\n        var property = ruleSet[i];\n        ret[selector][property] = ruleSet.getPropertyValue(property);\n      }\n    }\n    return ret;\n  },\n\n  /**\n    * @desc Get the stylesheet text\n    * @return {String} css text\n  */\n  getCssText: function getCssText() {\n    var map = this.map;\n    var ret = [];\n    for (var selector in map) {\n      ret.push(selector.replace(/,\\W/g, \",\\n\") + \" {\\n\\t\" + map[selector].cssText.replace(/;\\W/g, \";\\n\\t\") + \"\\n}\");\n    }\n    return ret.join(\"\\n\");\n  }\n};\n\nmodule.exports = stylesheet;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar round = Math.round;\n\nmodule.exports = {\n  name: \"hsl\",\n\n  fromHsv: function fromHsv(hsv) {\n    var s = hsv.s / 100,\n        v = hsv.v / 100;\n    var p = (2 - s) * v;\n    s = s == 0 ? 0 : s * v / (p < 1 ? p : 2 - p);\n    return {\n      h: hsv.h,\n      s: round(s * 100),\n      l: round(p * 50)\n    };\n  },\n\n  toHsv: function toHsv(hsl) {\n    var s = hsl.s / 50,\n        l = hsl.l / 100;\n    s *= l <= 1 ? l : 2 - l;\n    return {\n      h: hsl.h,\n      s: round(2 * s / (l + s) * 100),\n      v: round((l + s) * 100)\n    };\n  }\n};\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _hsl = __webpack_require__(4);\n\nvar _hsl2 = _interopRequireDefault(_hsl);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = {\n  name: \"hslString\",\n\n  fromHsv: function fromHsv(hsv) {\n    var color = _hsl2.default.fromHsv(hsv);\n    return \"hsl\" + (color.a ? \"a\" : \"\") + \"(\" + color.h + \", \" + color.s + \"%, \" + color.l + \"%\" + (color.a ? \", \" + color.a : \"\") + \")\";\n  },\n\n  toHsv: function toHsv(hslString) {\n    var parsed = hslString.match(/(hsla?)\\((\\d+)(?:\\D+?)(\\d+)(?:\\D+?)(\\d+)(?:\\D+?)?([0-9\\.]+?)?\\)/i);\n    return _hsl2.default.toHsv({\n      h: parseInt(parsed[2]),\n      s: parseInt(parsed[3]),\n      l: parseInt(parsed[4])\n    });\n  }\n};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n  * @constructor marker UI\n  * @param {Object} ctx - canvas 2d context to draw on\n  * @param {Object} opts - options\n*/\nvar marker = function marker(svg, opts) {\n  var group = svg.insert(null, \"g\");\n  [[5, \"#000\"], [2, \"#fff\"]].map(function (ring) {\n    svg.circle(0, 0, opts.r, group, {\n      \"f\": \"none\",\n      \"sw\": ring[0],\n      \"s\": ring[1]\n    });\n  });\n  this._el = group;\n};\n\nmarker.prototype = {\n  /**\n    * @desc move markerpoint to centerpoint (x, y) and redraw\n    * @param {Number} x - point x coordinate\n    * @param {Number} y - point y coordinate\n  */\n  move: function move(x, y) {\n    this._el.setAttribute(\"transform\", \"translate(\" + x + \" \" + y + \")\");\n  }\n};\n\nmodule.exports = marker;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _wheel = __webpack_require__(13);\n\nvar _wheel2 = _interopRequireDefault(_wheel);\n\nvar _slider = __webpack_require__(11);\n\nvar _slider2 = _interopRequireDefault(_slider);\n\nvar _dom = __webpack_require__(1);\n\nvar _dom2 = _interopRequireDefault(_dom);\n\nvar _svg = __webpack_require__(12);\n\nvar _svg2 = _interopRequireDefault(_svg);\n\nvar _color = __webpack_require__(2);\n\nvar _color2 = _interopRequireDefault(_color);\n\nvar _stylesheet = __webpack_require__(3);\n\nvar _stylesheet2 = _interopRequireDefault(_stylesheet);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// When the user starts to interact with a color picker's UI, a referece to that coloPicker will be stored globally\nvar activeColorWheel = false;\n\n// Global mousemove + touchmove event handler\n_dom2.default.listen(document, [\"mousemove\", \"touchmove\"], function (e) {\n  // If there is an active colorWheel, call its mousemove handler\n  if (activeColorWheel) activeColorWheel._mouseMove(e);\n});\n\n// Global mouseup + touchend event handler\n_dom2.default.listen(document, [\"mouseup\", \"touchend\"], function (e) {\n  // If there is an active colorWheel, stop it from handling input and clear the active colorWheel reference\n  if (activeColorWheel) {\n    e.preventDefault();\n    activeColorWheel.emit(\"input:end\");\n    activeColorWheel._mouseTarget = false;\n    activeColorWheel = false;\n  }\n});\n\n/**\n  @constructor color wheel object\n  @param {ElementOrString} el - a DOM element or the CSS selector for a DOM element to use as a container for the UI\n  @param {Object} opts - options for this instance\n*/\nvar colorWheel = function colorWheel(el, opts) {\n  if (!(this instanceof colorWheel)) return new colorWheel(el, opts);\n  // event storage for `on` and `off`\n  this._events = {};\n  this._mouseTarget = false;\n  this._onChange = false;\n  // Create an iroStyleSheet for this colorWheel's CSS overrides\n  this.stylesheet = new _stylesheet2.default();\n  this.css = opts.css || opts.styles || undefined;\n  // Create an iroColor to store this colorWheel's selected color\n  this.color = new _color2.default(opts.color || \"#fff\");\n\n  // Wait for the document to be ready, then init the UI\n  _dom2.default.whenReady(function () {\n    // If `el` is a string, use it to select an Element, else assume it's an element\n    el = \"string\" == typeof el ? document.querySelector(el) : el;\n    // Make sure the canvas wrapper is position:relative\n    // This is because we'll be using position:absolute to stack the canvas layers\n    el.style.cssText += \"position:relative\";\n    // Find the width and height for the UI\n    // If not defined in the options, try the HTML width + height attributes of the wrapper, else default to 320\n    var width = opts.width || parseInt(el.width) || 320;\n    var height = opts.height || parseInt(el.height) || 320;\n    // Create UI layers\n    // To support devices with hidpi screens, we scale the canvas so that it has more pixels, but still has the same size visually\n    // This implementation is based on https://www.html5rocks.com/en/tutorials/canvas/hidpi/\n    var pxRatio = devicePixelRatio || 1;\n    // Create a layer for each name\n    // Create a new canvas and add it to the page\n\n    var svgRoot = new _svg2.default(el, width, height);\n\n    this.el = el;\n    this.svg = svgRoot;\n    // Calculate layout variables\n    var padding = opts.padding + 2 || 6,\n        borderWidth = opts.borderWidth || 0,\n        markerRadius = opts.markerRadius || 8,\n        sliderMargin = opts.sliderMargin || 24,\n        sliderHeight = opts.sliderHeight || markerRadius * 2 + padding * 2 + borderWidth * 2,\n        bodyWidth = Math.min(height - sliderHeight - sliderMargin, width),\n        wheelRadius = bodyWidth / 2 - borderWidth,\n        leftMargin = (width - bodyWidth) / 2;\n    var marker = {\n      r: markerRadius\n    };\n    var borderStyles = {\n      w: borderWidth,\n      color: opts.borderColor || \"#fff\"\n    };\n    // Create UI elements\n    this.ui = [new _wheel2.default(svgRoot, {\n      cX: leftMargin + bodyWidth / 2,\n      cY: bodyWidth / 2,\n      r: wheelRadius,\n      rMax: wheelRadius - (markerRadius + padding),\n      marker: marker,\n      border: borderStyles\n    }), new _slider2.default(svgRoot, {\n      sliderType: \"v\",\n      x: leftMargin + borderWidth,\n      y: bodyWidth + sliderMargin,\n      w: bodyWidth - borderWidth * 2,\n      h: sliderHeight - borderWidth * 2,\n      r: sliderHeight / 2 - borderWidth,\n      marker: marker,\n      border: borderStyles\n    })];\n    // Whenever the selected color changes, trigger a colorWheel update too\n    this.color.watch(this._update.bind(this), true);\n    // Add handler for mousedown + touchdown events on this element\n    _dom2.default.listen(el, [\"mousedown\", \"touchstart\"], this._mouseDown.bind(this));\n  }.bind(this));\n};\n\ncolorWheel.prototype = {\n  /**\n    * @desc Set a callback function that gets called whenever the selected color changes\n    * @param {Function} callback The watch callback\n    * @param {Boolean} callImmediately set to true if you want to call the callback as soon as it is added\n  */\n  watch: function watch(callback, callImmediately) {\n    this.on(\"color:change\", callback);\n    this._onChange = callback;\n    if (callImmediately) callback(this.color);\n  },\n\n  /**\n    * @desc Remove the watch callback\n  */\n  unwatch: function unwatch() {\n    this.off(\"color:change\", this._onChange);\n  },\n\n  /**\n    * @desc Set a callback function for an event\n    * @param {String} eventType The name of the event to listen to, pass \"*\" to listen to all events\n    * @param {Function} callback The watch callback\n  */\n  on: function on(eventType, callback) {\n    var events = this._events;\n    (events[eventType] || (events[eventType] = [])).push(callback);\n  },\n\n  /**\n    * @desc Remove a callback function for an event added with on()\n    * @param {String} eventType The name of the event\n    * @param {Function} callback The watch callback to remove from the event\n  */\n  off: function off(eventType, callback) {\n    var events = this._events;\n    if (events[eventType]) {\n      events[eventType].splice(events[eventType].indexOf(callback), 1);\n    }\n  },\n\n  /**\n    * @desc Emit an event\n    * @param {String} eventType The name of the event to emit\n    * @param {Object} data data to pass to all the callback functions\n  */\n  emit: function emit(eventType, data) {\n    var events = this._events;\n    (events[eventType] || []).map(function (callback) {\n      callback(data);\n    });\n    (events[\"*\"] || []).map(function (callback) {\n      callback(data);\n    });\n  },\n\n  /**\n    * @desc Get the local-space X and Y pointer position from an input event\n    * @param {Event} e A mouse or touch event\n    * @return {Object} x and y coordinates from the top-left of the UI\n    * @access protected\n  */\n  _getLocalPoint: function _getLocalPoint(e) {\n    // Prevent default event behaviour, like scrolling\n    e.preventDefault();\n    // Detect if the event is a touch event by checking if it has the `touches` property\n    // If it is a touch event, use the first touch input\n    var point = e.touches ? e.changedTouches[0] : e,\n\n    // Get the screen position of the UI\n    rect = this.el.getBoundingClientRect();\n    // Convert the screen-space pointer position to local-space\n    return {\n      x: point.clientX - rect.left,\n      y: point.clientY - rect.top\n    };\n  },\n\n  /**\n    * @desc Handle a pointer input at local-space point (x, y)\n    * @param {Event} e A mouse or touch event\n    * @return {Object} x and y coordinates from the top-left of the UI\n    * @access protected\n  */\n  _handleInput: function _handleInput(x, y) {\n    // Use the active UI element to handle translating the input to a change in the color\n    this.color.set(this._mouseTarget.input(x, y));\n  },\n\n  /**\n    * @desc mousedown event handler\n    * @param {Event} e A mouse or touch event\n    * @access protected\n  */\n  _mouseDown: function _mouseDown(e) {\n    var _this = this;\n\n    // Get the local-space position of the mouse input\n    var point = this._getLocalPoint(e),\n        x = point.x,\n        y = point.y;\n\n    // Loop through each UI element and check if the point \"hits\" it\n    this.ui.forEach(function (uiElement) {\n      // If the element is hit, this means the user has clicked the element and is trying to interact with it\n      if (uiElement.checkHit(x, y)) {\n        // Set a reference to this colorWheel instance so that the global event handlers know about it\n        activeColorWheel = _this;\n        // Set an internal reference to the uiElement being interacted with, for other internal event handlers\n        _this._mouseTarget = uiElement;\n        // Emit input start event\n        _this.emit(\"input:start\");\n        // Finally, use the position to update the picked color\n        _this._handleInput(x, y);\n      }\n    });\n  },\n\n  /**\n    * @desc mousemose event handler\n    * @param {Event} e A mouse or touch event\n    * @access protected\n  */\n  _mouseMove: function _mouseMove(e) {\n    // If there is an active colorWheel (set in _mouseDown) then update the input as the user interacts with it\n    if (this == activeColorWheel) {\n      // Get the local-space position of the mouse input\n      var point = this._getLocalPoint(e);\n      // Use the position to update the picker color\n      this._handleInput(point.x, point.y);\n    }\n  },\n\n  /**\n    * @desc update the selected color\n    * @param {Object} newValue - the new HSV values\n    * @param {Object} oldValue - the old HSV values\n    * @param {Object} changes - booleans for each HSV channel: true if the new value is different to the old value, else false\n    * @access protected\n  */\n  _update: function _update(newValue, oldValue, changes) {\n    var color = this.color;\n    var rgb = color.rgbString;\n    var css = this.css;\n    // Loop through each UI element and update it\n    this.ui.forEach(function (uiElement) {\n      uiElement.update(color, changes);\n    });\n    // Update the stylesheet too\n    for (var selector in css) {\n      var properties = css[selector];\n      for (var prop in properties) {\n        this.stylesheet.setRule(selector, prop, rgb);\n      }\n    }\n    // Call the color change event\n    this.emit(\"color:change\", color);\n  }\n};\n\nmodule.exports = colorWheel;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _rgb = __webpack_require__(0);\n\nvar _rgb2 = _interopRequireDefault(_rgb);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = {\n  name: \"hexString\",\n\n  fromHsv: function fromHsv(hsv) {\n    var color = _rgb2.default.fromHsv(hsv),\n        r = color.r,\n        g = color.g,\n        b = color.b;\n    // If each RGB channel's value is a multiple of 17, we can use HEX shorthand notation\n    var useShorthand = r % 17 == 0 && g % 17 == 0 && b % 17 == 0,\n\n    // If we're using shorthand notation, divide each channel by 17\n    divider = useShorthand ? 17 : 1,\n\n    // bitLength of each channel (for example, F is 4 bits long while FF is 8 bits long)\n    bitLength = useShorthand ? 4 : 8,\n\n    // Target length of the string (ie \"#FFF\" or \"#FFFFFF\")\n    strLength = useShorthand ? 4 : 7,\n\n    // Combine the channels together into a single integer\n    int = r / divider << bitLength * 2 | g / divider << bitLength | b / divider,\n\n    // Convert that integer to a hex string\n    str = int.toString(16);\n    // Add right amount of left-padding\n    return \"#\" + new Array(strLength - str.length).join(\"0\") + str;\n  },\n\n  toHsv: function toHsv(hex) {\n    // Strip any \"#\" characters\n    hex = hex.replace(/#/g, '');\n    // Prefix the hex string with \"0x\" which indicates a number in hex notation, then convert to an integer\n    var int = parseInt(\"0x\" + hex),\n\n    // If the length of the input is only 3, then it is a shorthand hex color\n    isShorthand = hex.length == 3,\n\n    // bitMask for isolating each channel\n    bitMask = isShorthand ? 0xF : 0xFF,\n\n    // bitLength of each channel (for example, F is 4 bits long while FF is 8 bits long)\n    bitLength = isShorthand ? 4 : 8,\n\n    // If we're using shorthand notation, multiply each channel by 17\n    multiplier = isShorthand ? 17 : 1;\n\n    return _rgb2.default.toHsv({\n      r: (int >> bitLength * 2 & bitMask) * multiplier,\n      g: (int >> bitLength & bitMask) * multiplier,\n      b: (int & bitMask) * multiplier\n    });\n  }\n};\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _rgb = __webpack_require__(0);\n\nvar _rgb2 = _interopRequireDefault(_rgb);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = {\n  name: \"rgbString\",\n\n  fromHsv: function fromHsv(hsv) {\n    var color = _rgb2.default.fromHsv(hsv);\n    return \"rgb\" + (color.a ? \"a\" : \"\") + \"(\" + color.r + \", \" + color.g + \", \" + color.b + (color.a ? \", \" + color.a : \"\") + \")\";\n  },\n\n  toHsv: function toHsv(rgbString) {\n    var parsed = rgbString.match(/(rgba?)\\((\\d+)(?:\\D+?)(\\d+)(?:\\D+?)(\\d+)(?:\\D+?)?([0-9\\.]+?)?\\)/i);\n    return _rgb2.default.toHsv({\n      r: parseInt(parsed[2]),\n      g: parseInt(parsed[3]),\n      b: parseInt(parsed[4])\n    });\n  }\n};\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _colorPicker = __webpack_require__(7);\n\nvar _colorPicker2 = _interopRequireDefault(_colorPicker);\n\nvar _color = __webpack_require__(2);\n\nvar _color2 = _interopRequireDefault(_color);\n\nvar _stylesheet = __webpack_require__(3);\n\nvar _stylesheet2 = _interopRequireDefault(_stylesheet);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = {\n  Color: _color2.default,\n  ColorPicker: _colorPicker2.default,\n  Stylesheet: _stylesheet2.default,\n  // for backwards compat\n  ColorWheel: _colorPicker2.default\n};\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _marker = __webpack_require__(6);\n\nvar _marker2 = _interopRequireDefault(_marker);\n\nvar _hslString = __webpack_require__(5);\n\nvar _hslString2 = _interopRequireDefault(_hslString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n  * @constructor slider UI\n*/\nvar slider = function slider(svg, opts) {\n  // \"range\" limits how far the slider's marker can travel, and where it stops and starts along the X axis\n  opts.range = {\n    min: opts.x + opts.r,\n    max: opts.x - opts.r,\n    w: opts.w - opts.r * 2\n  };\n  opts.sliderType = opts.sliderType || \"v\";\n  this.type = \"slider\";\n  this._opts = opts;\n  var borderWidth = opts.border.w;\n  var radius = opts.r + borderWidth / 2;\n\n  var gradient = svg.gradient(\"linear\", {\n    0: \"#000\",\n    100: \"#fff\"\n  });\n\n  svg.insert(null, \"rect\", {\n    \"rx\": radius,\n    \"ry\": radius,\n    \"x\": opts.x - borderWidth / 2,\n    \"y\": opts.y - borderWidth / 2,\n    \"width\": opts.w + borderWidth,\n    \"height\": opts.h + borderWidth,\n    \"f\": \"url(#\" + gradient.id + \")\",\n    \"sw\": borderWidth,\n    \"s\": opts.border.color\n  });\n\n  this._gradient = gradient;\n  this.marker = new _marker2.default(svg, opts.marker);\n};\n\nslider.prototype = {\n\n  /**\n    * @desc updates this element to represent a new color value\n    * @param {Object} color - an iroColor object with the new color value\n    * @param {Object} changes - an object that gives a boolean for each HSV channel, indicating whether ot not that channel has changed\n  */\n  update: function update(color, changes) {\n    var opts = this._opts;\n    var range = opts.range;\n    var hsv = color.hsv;\n    if (opts.sliderType == \"v\") {\n      if (changes.h || changes.s) {\n        this._gradient.setAttr(1, \"stop-color\", _hslString2.default.fromHsv({ h: hsv.h, s: hsv.s, v: 100 }));\n      }\n      if (changes.v) {\n        var percent = hsv.v / 100;\n        this.marker.move(range.min + percent * range.w, opts.y + opts.h / 2);\n      }\n    }\n  },\n\n  /**\n    * @desc Takes a point at (x, y) and returns HSV values based on this input -- use this to update a color from mouse input\n    * @param {Number} x - point x coordinate\n    * @param {Number} y - point y coordinate\n    * @return {Object} - new HSV color values (some channels may be missing)\n  */\n  input: function input(x, y) {\n    var opts = this._opts;\n    var range = opts.range;\n    var dist = Math.max(Math.min(x, range.max), range.min) - range.min;\n    return {\n      v: Math.round(100 / range.w * dist)\n    };\n  },\n\n  /**\n    * @desc Check if a point at (x, y) is inside this element\n    * @param {Number} x - point x coordinate\n    * @param {Number} y - point y coordinate\n    * @return {Boolean} - true if the point is a \"hit\", else false\n  */\n  checkHit: function checkHit(x, y) {\n    var opts = this._opts;\n    return x > opts.x && x < opts.x && y > opts.y + opts.w && y < opts.y + opts.h;\n  }\n};\n\nmodule.exports = slider;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _dom = __webpack_require__(1);\n\nvar _dom2 = _interopRequireDefault(_dom);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Quick references to reused math functions\nvar PI = Math.PI,\n    cos = Math.cos,\n    sin = Math.sin;\n\nvar gradientid = 0;\n\nvar svgGradient = function svgGradient(root, type, stops) {\n  switch (type) {\n    case \"linear\":\n      type = \"linearGradient\";\n      break;\n    default:\n      type = \"radialGradient\";\n  }\n  var stopElements = [];\n  var gradient = root.insert(root._defs, type, {\n    \"id\": \"irogradient\" + gradientid++\n  });\n  for (var offset in stops) {\n    stopElements.push(root.insert(gradient, \"stop\", {\n      \"offset\": offset + \"%\",\n      \"stop-color\": stops[offset]\n    }));\n  }\n  this.id = gradient.id;\n  this.stops = stopElements;\n};\n\nsvgGradient.prototype.setAttr = function (index, attr, value) {\n  this.stops[index].setAttribute(attr, value);\n};\n\nvar svg = function svg(parent, width, height) {\n  this._root = _dom2.default.appendNew(parent, \"svg\", {\n    viewBox: [0, 0, width, height].join(\" \"),\n    width: width,\n    height: height,\n    style: \"position:absolute;top:0;left:0;\"\n  }, \"SVG\");\n  this._defs = this.insert(null, \"defs\");\n};\n\nsvg.prototype = {\n\n  insert: function insert(parent, tagName, attrs) {\n    var el = document.createElementNS(\"http://www.w3.org/2000/svg\", tagName);\n    for (var attr in attrs || {}) {\n      var name = attr;\n      switch (attr) {\n        case \"s\":\n          name = \"stroke\";\n          break;\n        case \"sw\":\n          name = \"stroke-width\";\n          break;\n        case \"f\":\n          name = \"fill\";\n          break;\n        default:\n          name = attr;\n          break;\n      }\n      el.setAttribute(name, attrs[attr]);\n    }\n    (parent || this._root).appendChild(el);\n    return el;\n  },\n\n  gradient: function gradient(type, stops) {\n    return new svgGradient(this, type, stops);\n  },\n\n  arc: function arc(cx, cy, radius, startAngle, endAngle, parent, attrs) {\n    startAngle *= PI / 180;\n    endAngle *= PI / 180;\n    var x1 = cx + radius * cos(endAngle),\n        y1 = cy + radius * sin(endAngle),\n        x2 = cx + radius * cos(startAngle),\n        y2 = cy + radius * sin(startAngle);\n    attrs = attrs || {};\n    attrs.d = [\"M\", x1, y1, \"A\", radius, radius, 0, 0, 0, x2, y2].join(\" \");\n    return this.insert(parent, \"path\", attrs);\n  },\n\n  circle: function circle(cx, cy, radius, parent, attrs) {\n    attrs = attrs || {};\n    attrs.cx = cx;\n    attrs.cy = cy;\n    attrs.r = radius;\n    return this.insert(parent, \"circle\", attrs);\n  }\n\n};\n\nmodule.exports = svg;\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _marker = __webpack_require__(6);\n\nvar _marker2 = _interopRequireDefault(_marker);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Quick references to reused math functions\nvar PI = Math.PI,\n    pow = Math.pow,\n    sqrt = Math.sqrt,\n    abs = Math.abs,\n    round = Math.round;\n\n/**\n  * @constructor hue wheel UI\n*/\nvar wheel = function wheel(svg, opts) {\n  this._opts = opts;\n  this.type = \"wheel\";\n\n  var gradient = svg.gradient(\"radial\", {\n    0: \"#fff\",\n    100: \"#fff\"\n  });\n\n  var group = svg.insert(null, \"g\", {\n    \"sw\": opts.r,\n    \"f\": \"none\"\n  });\n\n  for (var hue = 0; hue < 360; hue++) {\n    svg.arc(opts.cX, opts.cY, opts.r / 2, hue - 0.5, hue + 1.5, group, {\n      \"s\": \"hsl(\" + hue + \",100%,\" + 100 / 2 + \"%)\"\n    });\n  }\n\n  gradient.setAttr(1, \"stop-opacity\", 0);\n\n  svg.circle(opts.cX, opts.cY, opts.r + opts.border.w / 2, null, {\n    \"f\": \"url(#\" + gradient.id + \")\",\n    \"s\": opts.border.color,\n    \"sw\": opts.border.w\n  });\n\n  this._lightness = svg.circle(opts.cX, opts.cY, opts.r, null, {\n    \"f\": \"#000\"\n  });\n\n  this.marker = new _marker2.default(svg, opts.marker);\n};\n\nwheel.prototype = {\n  /**\n    * @desc updates this element to represent a new color value\n    * @param {Object} color - an iroColor object with the new color value\n    * @param {Object} changes - an object that gives a boolean for each HSV channel, indicating whether ot not that channel has changed\n  */\n  update: function update(color, changes) {\n    var opts = this._opts;\n    var hsv = color.hsv;\n    // If the V channel has changed, redraw the wheel UI with the new value\n    if (changes.v) {\n      this._lightness.setAttribute(\"opacity\", 1 - hsv.v / 100);\n      // this.draw(hsv.v);\n    }\n    // If the H or S channel has changed, move the marker to the right position\n    if (changes.h || changes.s) {\n      // convert the hue value to radians, since we'll use it as an angle\n      var hueAngle = hsv.h * (PI / 180);\n      // convert the saturation value to a distance between the center of the ring and the edge\n      var dist = hsv.s / 100 * opts.rMax;\n      // Move the marker based on the angle and distance\n      this.marker.move(opts.cX + dist * Math.cos(hueAngle), opts.cY + dist * Math.sin(hueAngle));\n    }\n  },\n\n  /**\n    * @desc Takes a point at (x, y) and returns HSV values based on this input -- use this to update a color from mouse input\n    * @param {Number} x - point x coordinate\n    * @param {Number} y - point y coordinate\n    * @return {Object} - new HSV color values (some channels may be missing)\n  */\n  input: function input(x, y) {\n    var opts = this._opts,\n        cX = opts.cX,\n        cY = opts.cY,\n        radius = opts.r,\n        rangeMax = opts.rMax;\n\n    // Angle in radians, anticlockwise starting at 12 o'clock\n    var angle = Math.atan2(x - cX, y - cY),\n\n    // Calculate the hue by converting the angle to radians, and normalising the angle to 3 o'clock\n    hue = 360 - (round(angle * (180 / PI)) + 270) % 360,\n\n    // Find the point's distance from the center of the wheel\n    // This is used to show the saturation level\n    dist = Math.min(sqrt(pow(cX - x, 2) + pow(cY - y, 2)), rangeMax);\n\n    // Return just the H and S channels, the wheel element doesn't do anything with the L channel\n    return {\n      h: hue,\n      s: round(100 / rangeMax * dist)\n    };\n  },\n\n  /**\n    * @desc Check if a point at (x, y) is inside this element\n    * @param {Number} x - point x coordinate\n    * @param {Number} y - point y coordinate\n    * @return {Boolean} - true if the point is a \"hit\", else false\n  */\n  checkHit: function checkHit(x, y) {\n    var opts = this._opts;\n\n    // Check if the point is within the hue ring by comparing the point's distance from the centre to the ring's radius\n    // If the distance is smaller than the radius, then we have a hit\n    var dx = abs(x - opts.cX),\n        dy = abs(y - opts.cY);\n    return sqrt(dx * dx + dy * dy) < opts.r;\n  }\n};\n\nmodule.exports = wheel;\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// iro.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/test\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 03c3fb10168efadf09ad","var round = Math.round;\n\nmodule.exports = {\n  name: \"rgb\",\n\n  fromHsv: function (hsv) {\n    var r, g, b, i, f, p, q, t;\n    var h = hsv.h/360, s = hsv.s/100, v = hsv.v/100;\n    i = Math.floor(h * 6);\n    f = h * 6 - i;\n    p = v * (1 - s);\n    q = v * (1 - f * s);\n    t = v * (1 - (1 - f) * s);\n    switch (i % 6) {\n      case 0: r = v, g = t, b = p; break;\n      case 1: r = q, g = v, b = p; break;\n      case 2: r = p, g = v, b = t; break;\n      case 3: r = p, g = q, b = v; break;\n      case 4: r = t, g = p, b = v; break;\n      case 5: r = v, g = p, b = q; break;\n    }\n    return {r: round(r * 255), g: round(g * 255), b: round(b * 255)};\n  },\n  \n  toHsv: function (rgb) {\n    // Modified from https://github.com/bgrins/TinyColor/blob/master/tinycolor.js#L446\n    var r = rgb.r / 255,\n        g = rgb.g / 255,\n        b = rgb.b / 255;\n    var max = Math.max(r, g, b),\n        min = Math.min(r, g, b),\n        delta = max - min;\n    var hue;\n    switch (max) {\n      case min:\n        hue = 0;\n        break;\n      case r:\n        hue = (g - b) / delta + (g < b ? 6 : 0);\n        break;\n      case g:\n        hue = (b - r) / delta + 2\n        break;\n      case b:\n        hue = (r - g) / delta + 4;\n        break;\n    }\n    hue /= 6;\n    return {\n      h: round(hue * 360),\n      s: round(max === 0 ? 0 : (delta / max) * 100),\n      v: round(max * 100)\n    };\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./colorModels/rgb.js","// Quick reference to the document object and some strings since we usethem more than once\nconst doc = document,\n      READYSTATE_COMPLETE = \"complete\",\n      READYSTATE_CHANGE = \"readystatechange\";\n\n/**\n * @desc iterate a list (or create a one-item list from a string), calling callback with each item\n * @param {ArrayOrString} list an array or string, callback will be called for each array item, or once if a string is given\n * @param {Function} callback a function to call for each item, the item will be passed as the first parameter\n * @access private\n*/\nfunction iterateList(list, callback) {\n  list = (\"string\" == typeof list) ? [list] : list;\n  list.forEach(callback);\n};\n\nmodule.exports = {\n  /**\n   * @desc create a new HTML element\n   * @param {String} tagName the tag type of the element to create\n   * @param {String} nameSpaceType \"SVG\" = svg namespace, leave false for default namespace\n   * @return {Element} the newly created HTML element\n  */\n  create: function (tagName, nameSpaceType) {\n    return nameSpaceType == \"SVG\" ? doc.createElementNS(\"http://www.w3.org/2000/svg\", tagName) : doc.createElement(tagName);\n  },\n\n  /**\n   * @desc append a child element to an element\n   * @param {Element} parent the parent element to append to\n   * @param {Element} child the child element to append\n   * @return {Element} the child element, now appended to the parent\n  */\n  append: function (parent, child) {\n    return parent.appendChild(child);\n  },\n\n  appendNew: function (parent, tagName, attrs, nameSpaceType) {\n    var child = this.create(tagName, nameSpaceType);\n    this.setAttr(child, attrs);\n    return parent.appendChild(child);\n  },\n\n  /**\n   * @desc get an element's attribute by name\n   * @param {Element} el target element\n   * @param {String} attrName the name of the attribute to get\n   * @return {String} the value of the attribute\n  */\n  attr: function (el, attrName) {\n    return el.getAttribute(attrName);\n  },\n\n  setAttr: function (el, attrs) {\n    for (var attrName in (attrs || {})) {\n      el.setAttribute(attrName, attrs[attrName]);\n    }\n  },\n\n  /**\n   * @desc listen to one or more events on an element\n   * @param {Element} el target element\n   * @param {ArrayOrString} eventList the events to listen to\n   * @param {Function} callback the event callback function\n  */\n  listen: function (el, eventList, callback) {\n    iterateList(eventList, function (eventName) {\n      el.addEventListener(eventName, callback);\n    });\n  },\n\n  /**\n   * @desc remove an event listener on an element\n   * @param {Element} el target element\n   * @param {ArrayOrString} eventList the events to remove\n   * @param {Function} callback the event callback function\n  */\n  unlisten: function (el, eventList, callback) {\n    iterateList(eventList, function (eventName) {\n      el.removeEventListener(eventName, callback);\n    });\n  },\n\n  /**\n   * @desc call callback when the page document is ready\n   * @param {Function} callback callback function to be called\n  */\n  whenReady: function (callback) {\n    var _this = this;\n    if (doc.readyState == READYSTATE_COMPLETE) {\n      callback();\n    }\n    else {\n      _this.listen(doc, READYSTATE_CHANGE, function stateChange(e) {\n        if (doc.readyState == READYSTATE_COMPLETE) {\n          callback();\n          _this.unlisten(doc, READYSTATE_CHANGE, stateChange);\n        }\n      });\n    }\n  },\n}\n\n\n\n// WEBPACK FOOTER //\n// ./util/dom.js","import hsl from \"colorModels/hsl\";\nimport rgb from \"colorModels/rgb\";\nimport hslString from \"colorModels/hslString\";\nimport rgbString from \"colorModels/rgbString\";\nimport hexString from \"colorModels/hexString\";\n\nconst colorModels = [\n  hsl,\n  rgb,\n  hslString,\n  rgbString,\n  hexString\n];\n\n/**\n  @constructor color object\n  @param {String} str (optional) CSS color string to use as the start color for this element\n*/\nlet color = function (str) {\n  if (!(this instanceof color)) return new color(str);\n  // The watch callback function for this color will be stored here\n  this._onChange = false;\n  // The default color value\n  this._value = {h: undefined, s: undefined, v: undefined};\n  this.register(\"hsv\", {\n    get: this.get,\n    set: this.set\n  });\n  // Loop through each external color model and register it\n  colorModels.forEach((model) => {\n    this.register(model.name, {\n      set: function (value) {\n        this.hsv = model.toHsv(value);\n      },\n      get: function () {\n        return model.fromHsv(this.hsv);\n      },\n    });\n  });\n  if (str) this.fromString(str);\n};\n\ncolor.prototype = {\n\n  /**\n    * @desc Register a new color model on this instance\n    * @param {String} name The name of the color model\n    * @param {Object} descriptor The property descriptor (see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty#Description)\n  */\n  register: function (name, descriptor) {\n    Object.defineProperty(this, name, descriptor);\n  },\n\n  /**\n    * @desc Set a callback function that gets called whenever the selected color changes\n    * @param {Function} callback The watch callback\n    * @param {Boolean} callImmediately set to true if you want to call the callback as soon as it is added\n  */\n  watch: function (callback, callImmediately) {\n    this._onChange = callback;\n    if (callImmediately) this.forceUpdate();\n  },\n\n  /**\n    * @desc Remove the watch callback\n  */\n  unwatch: function () {\n    this.watch(false);\n  },\n\n  /**\n    * @desc Force an update\n  */\n  forceUpdate: function () {\n    var value = this._value;\n    this._onChange(value, value, {h: true, s: true, v: true});\n  },\n\n  /**\n    * @desc Set the color from a HSV value\n    * @param {Object} newValue - HSV object\n  */\n  set: function (newValue) {\n    // Loop through the channels and check if any of them have changed\n    var changes = {};\n    var oldValue = this._value;\n    for (var channel in oldValue) {\n      if (!newValue.hasOwnProperty(channel)) newValue[channel] = oldValue[channel];\n      changes[channel] = !(newValue[channel] == oldValue[channel]);\n    }\n    // Update the old value\n    this._value = newValue;\n    // If the value has changed, call hook callback\n    var callback = this._onChange;\n    if ((changes.h || changes.s || changes.v) && (\"function\" == typeof callback)) callback(newValue, oldValue, changes);\n  },\n\n  /**\n    * @desc Get the HSV value\n    * @return HSV object\n  */\n  get: function () {\n    return this._value;\n  },\n\n  /**\n    * @desc Set the color from a CSS string\n    * @param {String} str - HEX, rgb, or hsl color string\n  */\n  fromString: function (str) {\n    if (/^rgb/.test(str)) {\n      this.rgbString = str\n    }\n    else if (/^hsl/.test(str)) {\n      this.hslString = str;\n    }\n    else if (/^#[0-9A-Fa-f]/.test(str)) {\n      this.hexString = str;\n    }\n  }\n};\n\nmodule.exports = color;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/color.js","import dom from \"util/dom\";\n\nconst doc = document;\n\n/**\n  @constructor stylesheet writer\n  @param {Object} overrides - an object representing the CSS rules that this stylesheet updates\n*/\nlet stylesheet = function (overrides) {\n  // Create a new style element\n  let style = dom.appendNew(doc.head, \"style\", {});\n  // Webkit apparently requires a text node to be inserted into the style element\n  // (according to https://davidwalsh.name/add-rules-stylesheets)\n  dom.append(style, doc.createTextNode(\"\"));\n  this.style = style;\n  // Create a reference to the style element's CSSStyleSheet object\n  // CSSStyleSheet API: https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleSheet\n  let sheet = style.sheet;\n  this.sheet = sheet;\n  // Get a reference to the sheet's CSSRuleList object\n  // CSSRuleList API: https://developer.mozilla.org/en-US/docs/Web/API/CSSRuleList\n  this.rules = sheet.rules || sheet.cssRules;\n  // We'll store references to all the CSSStyleDeclaration objects that we change here, keyed by the CSS selector they belong to\n  // CSSStyleDeclaration API: https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration\n  this.map = {};\n};\n\nstylesheet.prototype = {\n\n  /**\n    * @desc Turns the stylesheet \"on\", allowing the styles to be rendered\n  */\n  on: function () {\n    this.enable();\n  },\n  enable: function () {\n    this.sheet.disabled = false;\n  },\n\n  /**\n    * @desc Turns the stylesheet \"off\", preventing the styles from being rendered\n  */\n  off: function () {\n    this.disable();\n  },\n  disable: function () {\n    this.sheet.disabled = true;\n  },\n\n  /**\n    * @desc Set a specific rule for a given selector\n    * @param {String} selector - the CSS selector for this rule (e.g. \"body\", \".class\", \"#id\")\n    * @param {String} property - the CSS property to set (e.g. \"background-color\", \"font-family\", \"z-index\")\n    * @param {String} value    - the new value for the rule (e.g. \"rgb(255, 255, 255)\", \"Helvetica\", \"99\")\n  */\n  setRule: function (selector, property, value) {\n    var sheet = this.sheet;\n    var rules = sheet.rules || sheet.cssRules;\n    var map = this.map;\n    // Convert property from camelCase to snake-case\n    property = property.replace(/([A-Z])/g, function($1) {\n      return \"-\" + $1.toLowerCase();\n    });\n    if (!map.hasOwnProperty(selector)){\n      // If the selector hasn't been used yet we want to insert the rule at the end of the CSSRuleList, so we use its length as the index value\n      var index = rules.length;\n      // Prepare the rule declaration text, since both insertRule and addRule take this format\n      var declaration = property + \": \" + value;\n      // Insert the new rule into the stylesheet\n      try {\n        // Some browsers only support insertRule, others only support addRule, so we have to use both\n        sheet.insertRule(selector + \" {\" + declaration + \";}\", index);\n      } catch(e) {\n        sheet.addRule(selector, declaration, index);\n      } finally {\n        // Because safari is perhaps the worst browser in all of history, we have to remind it to keep the sheet rules up-to-date\n        rules = sheet.rules || sheet.cssRules;\n        // Add our newly inserted rule's CSSStyleDeclaration object to the internal map\n        map[selector] = rules[index].style;\n      }\n    }\n    else {\n      map[selector].setProperty(property, value);\n    }\n  },\n\n  /**\n    * @desc Get an object representing the current css styles\n    * @return {Object} css object\n  */\n  getCss: function () {\n    var map = this.map;\n    var ret = {};\n    for (var selector in map) {\n      var ruleSet = map[selector];\n      ret[selector] = {};\n      for (var i = 0; i < ruleSet.length; i++) {\n        var property = ruleSet[i];\n        ret[selector][property] = ruleSet.getPropertyValue(property);\n      }\n    }\n    return ret;\n  },\n\n  /**\n    * @desc Get the stylesheet text\n    * @return {String} css text\n  */\n  getCssText: function () {\n    var map = this.map;\n    var ret = [];\n    for (var selector in map) {\n      ret.push(selector.replace(/,\\W/g, \",\\n\") + \" {\\n\\t\" + map[selector].cssText.replace(/;\\W/g, \";\\n\\t\") + \"\\n}\");\n    }\n    return ret.join(\"\\n\");\n  }\n};\n\nmodule.exports = stylesheet;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/stylesheet.js","var round = Math.round;\n\nmodule.exports = {\n  name: \"hsl\",\n\n  fromHsv: function (hsv) {\n    var s = hsv.s / 100,\n        v = hsv.v / 100;\n    var p = (2 - s) * v;\n    s = s == 0 ? 0 : s * v / (p < 1 ? p : 2 - p);\n    return {\n      h: hsv.h,\n      s: round(s * 100),\n      l: round(p * 50)\n    };\n  },\n\n  toHsv: function (hsl) {\n    var s = hsl.s / 50,\n        l = hsl.l / 100;\n    s *= (l <= 1) ? l : 2 - l;\n    return {\n      h: hsl.h,\n      s: round(((2 * s) / (l + s)) * 100),\n      v: round((l + s) * 100)\n    };\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./colorModels/hsl.js","import hsl from \"colorModels/hsl\";\n\nmodule.exports = {\n  name: \"hslString\",\n\n  fromHsv: function (hsv) {\n    var color = hsl.fromHsv(hsv);\n    return \"hsl\" + (color.a ? \"a\" : \"\") + \"(\" + color.h + \", \" + color.s + \"%, \" + color.l + \"%\" + (color.a ? \", \" + color.a : \"\") + \")\";\n  },\n\n  toHsv: function (hslString) {\n    var parsed = hslString.match(/(hsla?)\\((\\d+)(?:\\D+?)(\\d+)(?:\\D+?)(\\d+)(?:\\D+?)?([0-9\\.]+?)?\\)/i);\n    return hsl.toHsv({\n      h: parseInt(parsed[2]),\n      s: parseInt(parsed[3]),\n      l: parseInt(parsed[4])\n    });\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./colorModels/hslString.js","/**\n  * @constructor marker UI\n  * @param {Object} ctx - canvas 2d context to draw on\n  * @param {Object} opts - options\n*/\nlet marker = function (svg, opts) {\n  var group = svg.insert(null, \"g\");\n  [[5, \"#000\"], [2, \"#fff\"]].map((ring) => {\n    svg.circle(0, 0, opts.r, group, {\n      \"f\": \"none\",\n      \"sw\": ring[0],\n      \"s\": ring[1],\n    });\n  });\n  this._el = group;\n};\n\nmarker.prototype = {\n  /**\n    * @desc move markerpoint to centerpoint (x, y) and redraw\n    * @param {Number} x - point x coordinate\n    * @param {Number} y - point y coordinate\n  */\n  move: function (x, y) {\n    this._el.setAttribute(\"transform\", \"translate(\" + x + \" \" + y + \")\");\n  }\n};\n\nmodule.exports = marker;\n\n\n\n// WEBPACK FOOTER //\n// ./ui/marker.js","import wheel from \"ui/wheel\";\nimport slider from \"ui/slider\";\nimport dom from \"util/dom\";\nimport svg from \"ui/svg\";\n\nimport iroColor from \"modules/color\";\nimport iroStyleSheet from \"modules/stylesheet\";\n\n// When the user starts to interact with a color picker's UI, a referece to that coloPicker will be stored globally\nlet activeColorWheel = false;\n\n// Global mousemove + touchmove event handler\ndom.listen(document, [\"mousemove\", \"touchmove\"], function (e) {\n  // If there is an active colorWheel, call its mousemove handler\n  if (activeColorWheel) activeColorWheel._mouseMove(e);\n});\n\n// Global mouseup + touchend event handler\ndom.listen(document, [\"mouseup\", \"touchend\"], function (e) {\n  // If there is an active colorWheel, stop it from handling input and clear the active colorWheel reference\n  if (activeColorWheel) {\n    e.preventDefault();\n    activeColorWheel.emit(\"input:end\");\n    activeColorWheel._mouseTarget = false;\n    activeColorWheel = false;\n  }\n});\n\n/**\n  @constructor color wheel object\n  @param {ElementOrString} el - a DOM element or the CSS selector for a DOM element to use as a container for the UI\n  @param {Object} opts - options for this instance\n*/\nlet colorWheel = function (el, opts) {\n  if (!(this instanceof colorWheel)) return new colorWheel(el, opts);\n  // event storage for `on` and `off`\n  this._events = {};\n  this._mouseTarget = false;\n  this._onChange = false;\n  // Create an iroStyleSheet for this colorWheel's CSS overrides\n  this.stylesheet = new iroStyleSheet();\n  this.css = opts.css || opts.styles || undefined;\n  // Create an iroColor to store this colorWheel's selected color\n  this.color = new iroColor(opts.color || \"#fff\");\n\n  // Wait for the document to be ready, then init the UI\n  dom.whenReady(function () {\n    // If `el` is a string, use it to select an Element, else assume it's an element\n    el = (\"string\" == typeof el) ? document.querySelector(el) : el;\n    // Make sure the canvas wrapper is position:relative\n    // This is because we'll be using position:absolute to stack the canvas layers\n    el.style.cssText += \"position:relative\";\n    // Find the width and height for the UI\n    // If not defined in the options, try the HTML width + height attributes of the wrapper, else default to 320\n    var width = opts.width || parseInt(el.width) || 320;\n    var height = opts.height || parseInt(el.height) || 320;\n    // Create UI layers\n    // To support devices with hidpi screens, we scale the canvas so that it has more pixels, but still has the same size visually\n    // This implementation is based on https://www.html5rocks.com/en/tutorials/canvas/hidpi/\n    var pxRatio = devicePixelRatio || 1;\n    // Create a layer for each name\n    // Create a new canvas and add it to the page\n\n    var svgRoot = new svg(el, width, height);\n\n    this.el = el;\n    this.svg = svgRoot;\n    // Calculate layout variables\n    var padding = opts.padding + 2 || 6,\n        borderWidth = opts.borderWidth || 0,\n        markerRadius = opts.markerRadius || 8,\n        sliderMargin = opts.sliderMargin || 24,\n        sliderHeight = opts.sliderHeight || (markerRadius * 2) + (padding * 2) + (borderWidth * 2),\n        bodyWidth = Math.min(height - sliderHeight - sliderMargin, width),\n        wheelRadius = (bodyWidth / 2) - borderWidth,\n        leftMargin = (width - bodyWidth) / 2;\n    var marker = {\n      r: markerRadius\n    };\n    var borderStyles = {\n      w: borderWidth,\n      color: opts.borderColor || \"#fff\",\n    };\n    // Create UI elements\n    this.ui = [\n      new wheel(svgRoot, {\n        cX: leftMargin + (bodyWidth / 2),\n        cY: bodyWidth / 2,\n        r: wheelRadius,\n        rMax: wheelRadius - (markerRadius + padding),\n        marker: marker,\n        border: borderStyles\n      }),\n      new slider(svgRoot, {\n        sliderType: \"v\",\n        x: leftMargin + borderWidth,\n        y: bodyWidth + sliderMargin,\n        w: bodyWidth - (borderWidth * 2),\n        h: sliderHeight - (borderWidth * 2),\n        r: (sliderHeight / 2) - borderWidth,\n        marker: marker,\n        border: borderStyles\n      })\n    ];\n    // Whenever the selected color changes, trigger a colorWheel update too\n    this.color.watch(this._update.bind(this), true);\n    // Add handler for mousedown + touchdown events on this element\n    dom.listen(el, [\"mousedown\", \"touchstart\"], this._mouseDown.bind(this));\n  }.bind(this));\n};\n\ncolorWheel.prototype = {\n  /**\n    * @desc Set a callback function that gets called whenever the selected color changes\n    * @param {Function} callback The watch callback\n    * @param {Boolean} callImmediately set to true if you want to call the callback as soon as it is added\n  */\n  watch: function (callback, callImmediately) {\n    this.on(\"color:change\", callback);\n    this._onChange = callback;\n    if (callImmediately) callback(this.color);\n  },\n\n  /**\n    * @desc Remove the watch callback\n  */\n  unwatch: function () {\n    this.off(\"color:change\", this._onChange);\n  },\n\n  /**\n    * @desc Set a callback function for an event\n    * @param {String} eventType The name of the event to listen to, pass \"*\" to listen to all events\n    * @param {Function} callback The watch callback\n  */\n  on: function (eventType, callback) {\n    var events = this._events;\n    (events[eventType] || (events[eventType] = [])).push(callback);\n  },\n\n  /**\n    * @desc Remove a callback function for an event added with on()\n    * @param {String} eventType The name of the event\n    * @param {Function} callback The watch callback to remove from the event\n  */\n  off: function (eventType, callback) {\n    var events = this._events;\n    if (events[eventType]) {\n      events[eventType].splice(events[eventType].indexOf(callback), 1);\n    }\n  },\n\n  /**\n    * @desc Emit an event\n    * @param {String} eventType The name of the event to emit\n    * @param {Object} data data to pass to all the callback functions\n  */\n  emit: function (eventType, data) {\n    var events = this._events;\n    (events[eventType] || []).map((callback) => { callback(data); });\n    (events[\"*\"] || []).map((callback) => { callback(data); });\n  },\n\n  /**\n    * @desc Get the local-space X and Y pointer position from an input event\n    * @param {Event} e A mouse or touch event\n    * @return {Object} x and y coordinates from the top-left of the UI\n    * @access protected\n  */\n  _getLocalPoint: function (e) {\n    // Prevent default event behaviour, like scrolling\n    e.preventDefault();\n    // Detect if the event is a touch event by checking if it has the `touches` property\n    // If it is a touch event, use the first touch input\n    var point = e.touches ? e.changedTouches[0] : e,\n        // Get the screen position of the UI\n        rect = this.el.getBoundingClientRect();\n    // Convert the screen-space pointer position to local-space\n    return {\n      x: point.clientX - rect.left,\n      y: point.clientY - rect.top\n    };\n  },\n\n  /**\n    * @desc Handle a pointer input at local-space point (x, y)\n    * @param {Event} e A mouse or touch event\n    * @return {Object} x and y coordinates from the top-left of the UI\n    * @access protected\n  */\n  _handleInput: function (x, y) {\n    // Use the active UI element to handle translating the input to a change in the color\n    this.color.set(this._mouseTarget.input(x, y));\n  },\n\n  /**\n    * @desc mousedown event handler\n    * @param {Event} e A mouse or touch event\n    * @access protected\n  */\n  _mouseDown: function (e) {\n    // Get the local-space position of the mouse input\n    var point = this._getLocalPoint(e),\n        x = point.x,\n        y = point.y;\n\n    // Loop through each UI element and check if the point \"hits\" it\n    this.ui.forEach((uiElement) => {\n      // If the element is hit, this means the user has clicked the element and is trying to interact with it\n      if (uiElement.checkHit(x, y)) {\n        // Set a reference to this colorWheel instance so that the global event handlers know about it\n        activeColorWheel = this;\n        // Set an internal reference to the uiElement being interacted with, for other internal event handlers\n        this._mouseTarget = uiElement;\n        // Emit input start event\n        this.emit(\"input:start\");\n        // Finally, use the position to update the picked color\n        this._handleInput(x, y);\n      }\n    });\n  },\n\n  /**\n    * @desc mousemose event handler\n    * @param {Event} e A mouse or touch event\n    * @access protected\n  */\n  _mouseMove: function (e) {\n    // If there is an active colorWheel (set in _mouseDown) then update the input as the user interacts with it\n    if (this == activeColorWheel) {\n      // Get the local-space position of the mouse input\n      var point = this._getLocalPoint(e);\n      // Use the position to update the picker color\n      this._handleInput(point.x, point.y);\n    }\n  },\n\n  /**\n    * @desc update the selected color\n    * @param {Object} newValue - the new HSV values\n    * @param {Object} oldValue - the old HSV values\n    * @param {Object} changes - booleans for each HSV channel: true if the new value is different to the old value, else false\n    * @access protected\n  */\n  _update: function (newValue, oldValue, changes) {\n    var color = this.color;\n    var rgb = color.rgbString;\n    var css = this.css;\n    // Loop through each UI element and update it\n    this.ui.forEach(function (uiElement) {\n      uiElement.update(color, changes);\n    });\n    // Update the stylesheet too\n    for (var selector in css) {\n      var properties = css[selector];\n      for (var prop in properties) {\n        this.stylesheet.setRule(selector, prop, rgb);\n      }\n    }\n    // Call the color change event\n    this.emit(\"color:change\", color);\n  },\n};\n\nmodule.exports = colorWheel;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/colorPicker.js","import rgb from \"colorModels/rgb\";\n\nmodule.exports = {\n  name: \"hexString\",\n\n  fromHsv: function (hsv) {\n    var color = rgb.fromHsv(hsv),\n        r = color.r,\n        g = color.g,\n        b = color.b;\n    // If each RGB channel's value is a multiple of 17, we can use HEX shorthand notation\n    var useShorthand = (r % 17 == 0) && (g % 17 == 0) && (b % 17 == 0),\n        // If we're using shorthand notation, divide each channel by 17\n        divider      = useShorthand ? 17 : 1,\n        // bitLength of each channel (for example, F is 4 bits long while FF is 8 bits long)\n        bitLength    = useShorthand ? 4 : 8,\n        // Target length of the string (ie \"#FFF\" or \"#FFFFFF\")\n        strLength    = useShorthand ? 4 : 7,\n        // Combine the channels together into a single integer\n        int          = (r / divider) << (bitLength * 2) | (g / divider) << bitLength | (b / divider),\n        // Convert that integer to a hex string\n        str          = int.toString(16);\n    // Add right amount of left-padding\n    return \"#\" + (new Array(strLength - str.length).join(\"0\")) + str;\n  },\n\n  toHsv: function (hex) {\n    // Strip any \"#\" characters\n    hex = hex.replace(/#/g, '');\n    // Prefix the hex string with \"0x\" which indicates a number in hex notation, then convert to an integer\n    var int         = parseInt(\"0x\" + hex),\n        // If the length of the input is only 3, then it is a shorthand hex color\n        isShorthand = hex.length == 3,\n        // bitMask for isolating each channel\n        bitMask     = isShorthand ? 0xF : 0xFF,\n        // bitLength of each channel (for example, F is 4 bits long while FF is 8 bits long)\n        bitLength   = isShorthand ? 4 : 8,\n        // If we're using shorthand notation, multiply each channel by 17\n        multiplier  = isShorthand ? 17 : 1;\n\n    return rgb.toHsv({\n      r: ((int >> (bitLength * 2)) & bitMask) * multiplier,\n      g: ((int >> bitLength) & bitMask) * multiplier,\n      b: (int & bitMask) * multiplier,\n    });\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./colorModels/hexString.js","import rgb from \"colorModels/rgb\";\n\nmodule.exports = {\n  name: \"rgbString\",\n\n  fromHsv: function (hsv) {\n    var color = rgb.fromHsv(hsv);\n    return \"rgb\" + (color.a ? \"a\" : \"\") + \"(\" + color.r + \", \" + color.g + \", \" + color.b + (color.a ? \", \" + color.a : \"\") + \")\";\n  },\n\n  toHsv: function (rgbString) {\n    var parsed = rgbString.match(/(rgba?)\\((\\d+)(?:\\D+?)(\\d+)(?:\\D+?)(\\d+)(?:\\D+?)?([0-9\\.]+?)?\\)/i);\n    return rgb.toHsv({\n      r: parseInt(parsed[2]),\n      g: parseInt(parsed[3]),\n      b: parseInt(parsed[4])\n    });\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./colorModels/rgbString.js","import colorPicker from \"modules/colorPicker\";\nimport color from \"modules/color\";\nimport stylesheet from \"modules/stylesheet\";\n\nmodule.exports = {\n  Color: color,\n  ColorPicker: colorPicker,\n  Stylesheet: stylesheet,\n  // for backwards compat\n  ColorWheel: colorPicker,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./iro.js","import marker from \"ui/marker\";\nimport hslString from \"colorModels/hslString\";\n\n/**\n  * @constructor slider UI\n*/\nlet slider = function (svg, opts) {\n  // \"range\" limits how far the slider's marker can travel, and where it stops and starts along the X axis\n  opts.range = {\n    min: opts.x + opts.r,\n    max: opts.x - opts.r,\n    w: opts.w - (opts.r * 2)\n  };\n  opts.sliderType = opts.sliderType || \"v\";\n  this.type = \"slider\";\n  this._opts = opts;\n  var borderWidth = opts.border.w;\n  var radius = opts.r + borderWidth / 2;\n\n  var gradient = svg.gradient(\"linear\", {\n    0: \"#000\",\n    100: \"#fff\"\n  });\n\n  svg.insert(null, \"rect\", {\n    \"rx\": radius,\n    \"ry\": radius,\n    \"x\": opts.x - borderWidth / 2,\n    \"y\": opts.y - borderWidth / 2,\n    \"width\": opts.w + borderWidth,\n    \"height\": opts.h + borderWidth,\n    \"f\": \"url(#\" + gradient.id + \")\",\n    \"sw\": borderWidth,\n    \"s\": opts.border.color,\n  });\n\n  this._gradient = gradient;\n  this.marker = new marker(svg, opts.marker);\n};\n\nslider.prototype = {\n\n  /**\n    * @desc updates this element to represent a new color value\n    * @param {Object} color - an iroColor object with the new color value\n    * @param {Object} changes - an object that gives a boolean for each HSV channel, indicating whether ot not that channel has changed\n  */\n  update: function (color, changes) {\n    var opts = this._opts;\n    var range = opts.range;\n    var hsv = color.hsv;\n    if (opts.sliderType == \"v\") {\n      if (changes.h || changes.s) {\n        this._gradient.setAttr(1, \"stop-color\", hslString.fromHsv({h: hsv.h, s: hsv.s, v: 100}));\n      }\n      if (changes.v) {\n        var percent = (hsv.v / 100);\n        this.marker.move(range.min + (percent * range.w), opts.y + (opts.h / 2));\n      }\n    }\n  },\n\n  /**\n    * @desc Takes a point at (x, y) and returns HSV values based on this input -- use this to update a color from mouse input\n    * @param {Number} x - point x coordinate\n    * @param {Number} y - point y coordinate\n    * @return {Object} - new HSV color values (some channels may be missing)\n  */\n  input: function (x, y) {\n    var opts = this._opts;\n    var range = opts.range;\n    var dist = Math.max(Math.min(x, range.max), range.min) - range.min;\n    return {\n      v: Math.round((100 / range.w) * dist),\n    };\n  },\n\n  /**\n    * @desc Check if a point at (x, y) is inside this element\n    * @param {Number} x - point x coordinate\n    * @param {Number} y - point y coordinate\n    * @return {Boolean} - true if the point is a \"hit\", else false\n  */\n  checkHit: function (x, y) {\n    var opts = this._opts;\n    return (x > opts.x) && (x < opts.x) && (y > opts.y + opts.w) && (y < opts.y + opts.h);\n  }\n};\n\nmodule.exports = slider;\n\n\n\n// WEBPACK FOOTER //\n// ./ui/slider.js","import dom from \"util/dom\";\n// Quick references to reused math functions\nvar PI = Math.PI,\n    cos = Math.cos,\n    sin = Math.sin;\n\nvar gradientid = 0;\n\nlet svgGradient = function (root, type, stops) {\n  switch (type) {\n    case \"linear\":\n      type = \"linearGradient\";\n      break;\n    default:\n      type = \"radialGradient\";\n  }\n  var stopElements = [];\n  var gradient = root.insert(root._defs, type, {\n    \"id\": \"irogradient\" + (gradientid++)\n  });\n  for (var offset in stops) {\n    stopElements.push(root.insert(gradient, \"stop\", {\n      \"offset\": offset + \"%\",\n      \"stop-color\": stops[offset],\n    }));\n  }\n  this.id = gradient.id;\n  this.stops = stopElements;\n};\n\nsvgGradient.prototype.setAttr = function (index, attr, value) {\n  this.stops[index].setAttribute(attr, value);\n};\n\nlet svg = function (parent, width, height) {\n  this._root = dom.appendNew(parent, \"svg\", {\n    viewBox: [0, 0, width, height].join(\" \"),\n    width: width,\n    height: height,\n    style: \"position:absolute;top:0;left:0;\"\n  }, \"SVG\");\n  this._defs = this.insert(null, \"defs\");\n};\n\nsvg.prototype = {\n\n  insert: function (parent, tagName, attrs) {\n    var el = document.createElementNS(\"http://www.w3.org/2000/svg\", tagName);\n    for (var attr in (attrs || {})) {\n      var name = attr;\n      switch (attr) {\n        case \"s\":\n          name = \"stroke\";\n          break;\n        case \"sw\":\n          name = \"stroke-width\";\n          break;\n        case \"f\":\n          name = \"fill\";\n          break;\n        default:\n          name = attr;\n          break;\n      }\n      el.setAttribute(name, attrs[attr]);\n    }\n    (parent || this._root).appendChild(el);\n    return el;\n  },\n\n  gradient: function (type, stops) {\n    return new svgGradient(this, type, stops);\n  },\n\n  arc: function (cx, cy, radius, startAngle, endAngle, parent, attrs) {\n    startAngle *= PI / 180;\n    endAngle *= PI / 180;\n    var x1 = cx + (radius * cos(endAngle)),\n        y1 = cy + (radius * sin(endAngle)),\n        x2 = cx + (radius * cos(startAngle)),\n        y2 = cy + (radius * sin(startAngle));\n    attrs = attrs || {};\n    attrs.d = [\"M\", x1, y1, \"A\", radius, radius, 0, 0, 0, x2, y2].join(\" \");\n    return this.insert(parent, \"path\", attrs);\n  },\n\n  circle: function (cx, cy, radius, parent, attrs) {\n    attrs = attrs || {};\n    attrs.cx = cx;\n    attrs.cy = cy;\n    attrs.r = radius;\n    return this.insert(parent, \"circle\", attrs);\n  }\n\n};\n\nmodule.exports = svg;\n\n\n\n// WEBPACK FOOTER //\n// ./ui/svg.js","import marker from \"ui/marker\";\n\n// Quick references to reused math functions\nvar PI = Math.PI,\n    pow = Math.pow,\n    sqrt = Math.sqrt,\n    abs = Math.abs,\n    round = Math.round;\n\n/**\n  * @constructor hue wheel UI\n*/\nlet wheel = function (svg, opts) {\n  this._opts = opts;\n  this.type = \"wheel\";\n\n  var gradient = svg.gradient(\"radial\", {\n    0: \"#fff\",\n    100: \"#fff\",\n  });\n\n  var group = svg.insert(null, \"g\", {\n    \"sw\": opts.r,\n    \"f\": \"none\",\n  });\n\n  for (var hue = 0; hue < 360; hue++) {\n    svg.arc(opts.cX, opts.cY, opts.r / 2, hue - 0.5, hue + 1.5, group, {\n      \"s\": \"hsl(\" + hue + \",100%,\" + (100 / 2) + \"%)\"\n    });\n  }\n\n  gradient.setAttr(1, \"stop-opacity\", 0);\n\n  svg.circle(opts.cX, opts.cY, opts.r + opts.border.w / 2, null, {\n    \"f\": \"url(#\" + gradient.id + \")\",\n    \"s\": opts.border.color,\n    \"sw\": opts.border.w,\n  });\n\n  this._lightness = svg.circle(opts.cX, opts.cY, opts.r, null, {\n    \"f\": \"#000\",\n  });\n\n  this.marker = new marker(svg, opts.marker);\n};\n\nwheel.prototype = {\n  /**\n    * @desc updates this element to represent a new color value\n    * @param {Object} color - an iroColor object with the new color value\n    * @param {Object} changes - an object that gives a boolean for each HSV channel, indicating whether ot not that channel has changed\n  */\n  update: function (color, changes) {\n    var opts = this._opts;\n    var hsv = color.hsv;\n    // If the V channel has changed, redraw the wheel UI with the new value\n    if (changes.v) {\n      this._lightness.setAttribute(\"opacity\", 1 - (hsv.v / 100));\n      // this.draw(hsv.v);\n    }\n    // If the H or S channel has changed, move the marker to the right position\n    if (changes.h || changes.s) {\n      // convert the hue value to radians, since we'll use it as an angle\n      var hueAngle = hsv.h * (PI/180);\n      // convert the saturation value to a distance between the center of the ring and the edge\n      var dist = (hsv.s / 100) * opts.rMax;\n      // Move the marker based on the angle and distance\n      this.marker.move(opts.cX + dist * Math.cos(hueAngle), opts.cY + dist * Math.sin(hueAngle));\n    }\n  },\n\n  /**\n    * @desc Takes a point at (x, y) and returns HSV values based on this input -- use this to update a color from mouse input\n    * @param {Number} x - point x coordinate\n    * @param {Number} y - point y coordinate\n    * @return {Object} - new HSV color values (some channels may be missing)\n  */\n  input: function (x, y) {\n    var opts = this._opts,\n        cX = opts.cX,\n        cY = opts.cY,\n        radius = opts.r,\n        rangeMax = opts.rMax;\n\n    // Angle in radians, anticlockwise starting at 12 o'clock\n    var angle = Math.atan2(x - cX, y - cY),\n        // Calculate the hue by converting the angle to radians, and normalising the angle to 3 o'clock\n        hue = 360 - (round(angle * (180 / PI)) + 270) % 360,\n        // Find the point's distance from the center of the wheel\n        // This is used to show the saturation level\n        dist = Math.min(sqrt(pow(cX - x, 2) + pow(cY - y, 2)), rangeMax);\n\n    // Return just the H and S channels, the wheel element doesn't do anything with the L channel\n    return {\n      h: hue,\n      s: round((100 / rangeMax) * dist)\n    };\n  },\n\n  /**\n    * @desc Check if a point at (x, y) is inside this element\n    * @param {Number} x - point x coordinate\n    * @param {Number} y - point y coordinate\n    * @return {Boolean} - true if the point is a \"hit\", else false\n  */\n  checkHit: function (x, y) {\n    var opts = this._opts;\n\n    // Check if the point is within the hue ring by comparing the point's distance from the centre to the ring's radius\n    // If the distance is smaller than the radius, then we have a hit\n    var dx = abs(x - opts.cX),\n        dy = abs(y - opts.cY);\n    return sqrt(dx * dx + dy * dy) < opts.r;\n  }\n};\n\nmodule.exports = wheel;\n\n\n\n// WEBPACK FOOTER //\n// ./ui/wheel.js"],"sourceRoot":""}